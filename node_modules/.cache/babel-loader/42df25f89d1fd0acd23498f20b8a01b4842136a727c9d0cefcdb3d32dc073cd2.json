{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Altamir\\\\Desktop\\\\Projetos\\\\ReactJS\\\\lista-de-contatos\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport ListaContato from \"./listaContato\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  //states\n  const [contato, setContato] = useState({\n    nome: '',\n    telefone: ''\n  });\n  const [listaContato, setListaContato] = useState([]);\n  const nomeRef = useRef();\n  const telefoneRef = useRef();\n\n  //metodos\n  function definirNome(evento) {\n    setContato({\n      ...contato,\n      nome: evento.target.value\n    });\n  }\n  function definirTelefone(evento) {\n    setContato({\n      ...contato,\n      telefone: evento.target.value\n    });\n  }\n  function adicionarContato() {\n    if (contato.nome === '' || contato.telefone === '') return;\n\n    // contato duplicado\n    let duplicado = listaContato.find(ct => ct.nome === contato.nome && ct.telefone === contato.telefone);\n    if (typeof duplicado !== 'undefined') {\n      telefoneRef.current.focus();\n      return;\n    }\n    setListaContato([...listaContato, contato]);\n\n    //limpar contato\n    setContato({\n      nome: '',\n      telefone: ''\n    });\n\n    //focus no input nome\n    nomeRef.current.focus();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de contatos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Nome: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 54\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: nomeRef,\n          type: \"text\",\n          onChange: definirNome,\n          value: contato.nome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Telefone: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: telefoneRef,\n          type: \"text\",\n          onChange: definirTelefone,\n          value: contato.telefone,\n          onKeyUp: teste\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: adicionarContato,\n        children: \"Adicionar contato\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ListaContato, {\n          listaContato: listaContato\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"gIFh3eBkAnNy/e3PFuIdaR0Wb3c=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","ListaContato","App","contato","setContato","nome","telefone","listaContato","setListaContato","nomeRef","telefoneRef","definirNome","evento","target","value","definirTelefone","adicionarContato","duplicado","find","ct","current","focus","teste"],"sources":["C:/Users/Altamir/Desktop/Projetos/ReactJS/lista-de-contatos/src/App.js"],"sourcesContent":["import React, {useState, useRef} from \"react\";\r\nimport ListaContato from \"./listaContato\";\r\n\r\nexport default function App () {\r\n\r\n    //states\r\n    const [contato, setContato] = useState({nome: '', telefone: ''})\r\n    const [listaContato, setListaContato] = useState([])\r\n    const nomeRef = useRef()\r\n    const telefoneRef = useRef()\r\n\r\n    //metodos\r\n    function definirNome(evento) {\r\n        setContato({...contato, nome: evento.target.value})\r\n    }\r\n    function definirTelefone(evento) {\r\n        setContato({...contato, telefone: evento.target.value})\r\n    }\r\n    function adicionarContato() {\r\n         if(contato.nome === '' || contato.telefone === '') return\r\n        \r\n\r\n        // contato duplicado\r\n        let duplicado = listaContato.find((ct) => ct.nome === contato.nome && ct.telefone === contato.telefone)\r\n        if (typeof duplicado !== 'undefined') {\r\n            telefoneRef.current.focus()\r\n            return\r\n        }\r\n        setListaContato([...listaContato, contato])\r\n\r\n        //limpar contato\r\n        setContato({nome: '', telefone: ''}\r\n        )\r\n\r\n        //focus no input nome\r\n        nomeRef.current.focus()\r\n    }\r\n \r\n    return(\r\n        <>\r\n            <h1>Lista de contatos</h1>\r\n            <hr />\r\n            <div>\r\n                <div> \r\n                    <label htmlFor=\"\">Nome: </label> <br />\r\n                    <input ref={nomeRef} type=\"text\" onChange={definirNome} value={contato.nome} />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"\">Telefone: </label> <br />\r\n                    <input ref={telefoneRef} type=\"text\" onChange={definirTelefone} value={contato.telefone} onKeyUp={teste} />\r\n                </div>                \r\n                <button onClick={adicionarContato}>Adicionar contato</button>\r\n                <div>\r\n                    <ListaContato listaContato={listaContato}/>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}